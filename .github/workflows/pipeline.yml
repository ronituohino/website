name: CI&CD

env:
  SERVICE: portfolio
  REGION: europe-north1

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-22.04

    # Testing database
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready  --health-interval 10s  --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Create .env.test file
        run: |
          echo "${{ secrets.TEST_ENV_FILE }}" > .env.test

      - name: Install pnpm & dotenv-cli
        run: npm install -g pnpm dotenv-cli

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright Browsers
        run: pnpm dlx playwright install --with-deps

      - name: Run Playwright tests
        run: pnpm run test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  deploy:
    if: ${{ github.event_name == 'push' }}
    needs: [test]
    runs-on: ubuntu-22.04
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3
      - uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS_JSON }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Create .env.production file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env.production

      - name: Build and Push Container
        run: |-
          DOCKER_BUILDKIT=1 docker build -t gcr.io/${{ secrets.GCP_CREDENTIALS_PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
          docker push gcr.io/${{ secrets.GCP_CREDENTIALS_PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm & dotenv-cli
        run: npm install -g pnpm dotenv-cli

      - name: Sync Prisma model to database
        run: dotenv -e .env.production -- pnpm dlx prisma migrate deploy

      - name: Deploy container to Cloud Run
        id: deploy
        uses: "google-github-actions/deploy-cloudrun@v1"
        with:
          service: ${{ env.SERVICE }}
          image:
            gcr.io/${{ secrets.GCP_CREDENTIALS_PROJECT_ID }}/${{ env.SERVICE
            }}:${{ github.sha }}
          region: ${{ env.REGION }}
          env_vars_file: .env.production

      - name: "Service output"
        run: 'curl "${{ steps.deploy.outputs.url }}"'
